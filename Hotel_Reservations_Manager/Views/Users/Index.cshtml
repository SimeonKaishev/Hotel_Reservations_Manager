@model IEnumerable<HotelData.Entity.User>

@{
    ViewData["Title"] = "Index";
}

<style>

    #myInput {
        background-image: url('/css/searchicon.png');
        background-position: 10px 10px;
        background-repeat: no-repeat;
        width: 100%;
        font-size: 16px;
        padding: 12px 20px 12px 40px;
        border: 1px solid #ddd;
        margin-bottom: 12px;
    }
</style>
<h1>Users</h1>

<p>
    @{
        if (int.Parse(TempData.Peek("userID").ToString()) == int.Parse(Hotel_Reservations_Manager.Properties.Resources.AdminId))
        {
            <a asp-action="Create">Create New</a>
        }
    }
</p>
Filter by: 
<select id="types" >
    <option value="0">Username</option>
    <option value="6">Email</option>
    <option value="5">Phone</option>
    <option value="1">Name</option>
</select>
<p></p>
<input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for..." title="Type in a search value">

<table class="table" id="myTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SecondName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Egn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HireDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SecondName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Egn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HireDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LeaveDate)
                </td>
                <td>
                    @{
                        if (int.Parse(TempData.Peek("userID").ToString()) == int.Parse(Hotel_Reservations_Manager.Properties.Resources.AdminId))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a><p></p>
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a><p></p>
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a><p></p>
                            <a asp-action="Fire" asp-route-id="@item.Id">Fire</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    function myFunction() {
        var input, filter, table, tr, td, i, txtValue;
        var UserOption = document.getElementById('types').value;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[UserOption];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>